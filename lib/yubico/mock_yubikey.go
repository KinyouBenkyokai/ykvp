// Code generated by MockGen. DO NOT EDIT.
// Source: yubikey.go

// Package yubico is a generated GoMock package.
package yubico

import (
	crypto "crypto"
	reflect "reflect"

	piv "github.com/go-piv/piv-go/piv"
	gomock "github.com/golang/mock/gomock"
)

// MockpivYubikey is a mock of pivYubikey interface.
type MockpivYubikey struct {
	ctrl     *gomock.Controller
	recorder *MockpivYubikeyMockRecorder
}

// MockpivYubikeyMockRecorder is the mock recorder for MockpivYubikey.
type MockpivYubikeyMockRecorder struct {
	mock *MockpivYubikey
}

// NewMockpivYubikey creates a new mock instance.
func NewMockpivYubikey(ctrl *gomock.Controller) *MockpivYubikey {
	mock := &MockpivYubikey{ctrl: ctrl}
	mock.recorder = &MockpivYubikeyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpivYubikey) EXPECT() *MockpivYubikeyMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockpivYubikey) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockpivYubikeyMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockpivYubikey)(nil).Close))
}

// GenerateKey mocks base method.
func (m *MockpivYubikey) GenerateKey(key [24]byte, slot piv.Slot, keyTemplate piv.Key) (crypto.PublicKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateKey", key, slot, keyTemplate)
	ret0, _ := ret[0].(crypto.PublicKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateKey indicates an expected call of GenerateKey.
func (mr *MockpivYubikeyMockRecorder) GenerateKey(key, slot, keyTemplate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateKey", reflect.TypeOf((*MockpivYubikey)(nil).GenerateKey), key, slot, keyTemplate)
}

// PrivateKey mocks base method.
func (m *MockpivYubikey) PrivateKey(slot piv.Slot, pub crypto.PublicKey, auth piv.KeyAuth) (crypto.PrivateKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateKey", slot, pub, auth)
	ret0, _ := ret[0].(crypto.PrivateKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PrivateKey indicates an expected call of PrivateKey.
func (mr *MockpivYubikeyMockRecorder) PrivateKey(slot, pub, auth interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateKey", reflect.TypeOf((*MockpivYubikey)(nil).PrivateKey), slot, pub, auth)
}
